[1mdiff --git a/proc.c b/proc.c[m
[1mindex 19be6c1..4a405b2 100644[m
[1m--- a/proc.c[m
[1m+++ b/proc.c[m
[36m@@ -473,25 +473,26 @@[m [mscheduler(void)[m
     [m
 [m
     // FCFS scheduling ------> looking thro creation time[m
[31m-    if(flag == 0 && hasRunnable(FCFSQeue, FCFSCounter)){[m
[31m-      for(p = FCFSQeue; p < &FCFSQeue[FCFSCounter]; p++){[m
[31m-        if (p->state == RUNNABLE){[m
[31m-          flag = 1;[m
[31m-          c->proc = p;[m
[31m-          switchuvm(p);[m
[31m-          p->state = RUNNING;[m
[31m-[m
[31m-          swtch(&(c->scheduler), p->context);[m
[31m-          switchkvm();[m
[31m-[m
[31m-          // Process is done running for now.[m
[31m-          // It should have changed its p->state before coming back.[m
[31m-          c->proc = 0;[m
[31m-          }[m
[31m-          release(&ptable.lock);[m
[31m-        }[m
[31m-      }[m
[31m-    }[m
[32m+[m[32m    // if(flag == 0 && hasRunnable(FCFSQeue, FCFSCounter)){[m
[32m+[m[32m    //   for(counter = 0; counter < FCFSCounter; counter++){[m
[32m+[m[32m    //     if (FCFSQeue[counter]->state == RUNNABLE){[m
[32m+[m[32m    //       p = FCFSQeue[counter];[m
[32m+[m[32m    //       flag = 1;[m
[32m+[m[32m    //       c->proc = p;[m
[32m+[m[32m    //       switchuvm(p);[m
[32m+[m[32m    //       p->state = RUNNING;[m
[32m+[m
[32m+[m[32m    //       swtch(&(c->scheduler), p->context);[m
[32m+[m[32m    //       switchkvm();[m
[32m+[m
[32m+[m[32m    //       // Process is done running for now.[m
[32m+[m[32m    //       // It should have changed its p->state before coming back.[m
[32m+[m[32m    //       c->proc = 0;[m
[32m+[m[32m    //       release(&ptable.lock);[m
[32m+[m[32m    //       }[m
[32m+[m[32m    //     }[m
[32m+[m[32m    //   }[m
[32m+[m[41m    [m
 [m
 [m
     if (flag == 0){[m
[1mdiff --git a/testSched.c b/testSched.c[m
[1mindex 25eec47..153db14 100644[m
[1m--- a/testSched.c[m
[1m+++ b/testSched.c[m
[36m@@ -35,11 +35,11 @@[m [mint main(){[m
     }[m
 	else {[m
         setProcType(getpid(), PRIORITY);[m
[32m+[m[32m        pti();[m
[32m+[m
     	for (int i = 0; i < NCHILD + 1; i++){[m
[31m-            pti();[m
             wait();[m
         }[m
 		printf(1, "user program finished\n");[m
     }[m
[31m-	exit();[m
 }[m
\ No newline at end of file[m
